#!/bin/bash
# -*-Shell-script-*-

kubecmd(){
  kubectl get pods -l $1 -n $2 -o jsonpath='{ .items[].status.phase }' 2>/dev/null
}
podFunctionUsage(){
  echo "Usage: ${FUNCNAME[1]} <label> <namespace>"
}
getPodUp(){
  timeout=0
  while [ $(kubectl get pods -l $1 -n $2 -o jsonpath='{ .items[].status.phase }' 2>/dev/null | wc -m) = '0' ]
  do 
    { printf .; sleep 1; }
  done
}
getPodPending(){
  while [ $(kubectl get pods -l $1 -n $2 -o jsonpath='{ .items[].status.phase }' 2>/dev/null) != 'Pending' ]
  do 
    { printf .; sleep 1; }
  done
}
getPodRunning(){
  while [ $(kubectl get pods -l $1 -n $2 -o jsonpath='{ .items[].status.phase }' 2>/dev/null) != 'Running' ]
  do 
    { printf .; sleep 1; }
  done
}
showPodRunning(){
  if [ $(kubectl get pods -l $1 -n $2 -o jsonpath='{ .items[].status.phase }' 2>/dev/null) == 'Running' ]
  then 
    printf "%s: %s \n" "$1" "Running";
  else
    getPodRunning $1 $2
    showPodRunning $1 $2
  fi
}
showPodPhase(){
  if [ $# -ne 2 ] ; then
    podFunctionUsage
    return 1000
  else
  # status=$(kubectl get pods -l $1 -n $2 -o jsonpath='{ .items[].status.phase }' 2>/dev/null)
    status=$(kubecmd $1 $2)
    printf "%s: %s \n" "$1" "$status";
  fi
}
waitPodUp(){
  getPodUp $*
  getPodRunning $*
  showPodPhase $*
}
waitPodPending(){
  if [ $# -ne 2 ] ; then
    podFunctionUsage
    return 1000
  else
    getPodUp $*
    getPodPending $*
    showPodPhase $*
  fi
}
